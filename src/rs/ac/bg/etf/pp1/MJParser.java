
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon May 13 15:44:20 CEST 2019
//----------------------------------------------------

package rs.ac.bg.etf.pp1;

import java_cup.runtime.*;
import org.apache.log4j.*;
import rs.ac.bg.etf.pp1.ast.*;

/** CUP v0.10k generated parser.
  * @version Mon May 13 15:44:20 CEST 2019
  */
public class MJParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public MJParser() {super();}

  /** Constructor which sets the default scanner. */
  public MJParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\270\000\002\003\010\000\002\002\004\000\002\004" +
    "\003\000\002\005\004\000\002\005\002\000\002\006\003" +
    "\000\002\006\003\000\002\006\003\000\002\006\003\000" +
    "\002\006\003\000\002\007\004\000\002\007\002\000\002" +
    "\010\005\000\002\011\004\000\002\011\003\000\002\012" +
    "\005\000\002\012\003\000\002\013\003\000\002\014\005" +
    "\000\002\014\003\000\002\015\003\000\002\016\003\000" +
    "\002\016\003\000\002\016\003\000\002\017\005\000\002" +
    "\020\005\000\002\020\003\000\002\021\003\000\002\022" +
    "\005\000\002\022\003\000\002\023\003\000\002\024\004" +
    "\000\002\024\003\000\002\025\004\000\002\025\002\000" +
    "\002\026\004\000\002\027\004\000\002\027\003\000\002" +
    "\030\005\000\002\030\003\000\002\032\003\000\002\031" +
    "\004\000\002\031\003\000\002\033\004\000\002\033\002" +
    "\000\002\034\012\000\002\035\003\000\002\035\002\000" +
    "\002\036\004\000\002\036\004\000\002\037\003\000\002" +
    "\037\002\000\002\040\004\000\002\040\004\000\002\041" +
    "\005\000\002\041\003\000\002\042\003\000\002\043\004" +
    "\000\002\043\002\000\002\044\004\000\002\044\003\000" +
    "\002\045\004\000\002\045\003\000\002\046\005\000\002" +
    "\046\003\000\002\047\004\000\002\050\004\000\002\050" +
    "\002\000\002\051\005\000\002\051\002\000\002\052\004" +
    "\000\002\052\002\000\002\062\005\000\002\063\005\000" +
    "\002\063\003\000\002\064\004\000\002\064\002\000\002" +
    "\065\010\000\002\070\013\000\002\053\013\000\002\071" +
    "\004\000\002\071\002\000\002\072\004\000\002\072\003" +
    "\000\002\073\004\000\002\073\003\000\002\074\005\000" +
    "\002\074\003\000\002\075\004\000\002\076\004\000\002" +
    "\076\002\000\002\054\004\000\002\054\002\000\002\055" +
    "\004\000\002\055\003\000\002\056\004\000\002\056\003" +
    "\000\002\057\005\000\002\057\003\000\002\060\004\000" +
    "\002\061\004\000\002\061\002\000\002\066\003\000\002" +
    "\066\003\000\002\067\003\000\002\067\002\000\002\077" +
    "\004\000\002\077\002\000\002\101\005\000\002\101\003" +
    "\000\002\102\005\000\002\102\003\000\002\103\004\000" +
    "\002\103\002\000\002\100\003\000\002\104\003\000\002" +
    "\104\003\000\002\105\003\000\002\105\011\000\002\105" +
    "\013\000\002\105\004\000\002\105\004\000\002\105\005" +
    "\000\002\105\007\000\002\105\010\000\002\105\005\000" +
    "\002\106\007\000\002\106\011\000\002\106\013\000\002" +
    "\110\003\000\002\110\003\000\002\111\003\000\002\111" +
    "\002\000\002\112\003\000\002\112\002\000\002\113\003" +
    "\000\002\113\002\000\002\114\003\000\002\114\002\000" +
    "\002\115\004\000\002\115\002\000\002\107\004\000\002" +
    "\107\004\000\002\116\005\000\002\116\005\000\002\116" +
    "\006\000\002\116\004\000\002\116\004\000\002\117\003" +
    "\000\002\117\002\000\002\120\005\000\002\120\003\000" +
    "\002\121\005\000\002\121\003\000\002\122\005\000\002" +
    "\122\003\000\002\123\005\000\002\123\003\000\002\124" +
    "\005\000\002\124\003\000\002\124\004\000\002\127\005" +
    "\000\002\127\003\000\002\130\003\000\002\130\006\000" +
    "\002\130\003\000\002\130\004\000\002\130\007\000\002" +
    "\130\005\000\002\131\003\000\002\131\005\000\002\131" +
    "\006\000\002\132\003\000\002\133\003\000\002\133\003" +
    "\000\002\133\003\000\002\133\003\000\002\133\003\000" +
    "\002\133\003\000\002\134\003\000\002\134\003\000\002" +
    "\135\003\000\002\135\003\000\002\135\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0123\000\004\004\005\001\002\000\004\002\u0125\001" +
    "\002\000\004\025\007\001\002\000\020\003\ufffd\006\ufffd" +
    "\007\ufffd\012\ufffd\013\ufffd\025\ufffd\054\ufffd\001\002\000" +
    "\020\003\uffff\006\uffff\007\uffff\012\uffff\013\uffff\025\uffff" +
    "\054\uffff\001\002\000\020\003\022\006\026\007\027\012" +
    "\012\013\021\025\016\054\023\001\002\000\006\003\u011d" +
    "\025\u011f\001\002\000\006\003\u010d\025\u010e\001\002\000" +
    "\020\003\ufffe\006\ufffe\007\ufffe\012\ufffe\013\ufffe\025\ufffe" +
    "\054\ufffe\001\002\000\020\003\ufff8\006\ufff8\007\ufff8\012" +
    "\ufff8\013\ufff8\025\ufff8\054\ufff8\001\002\000\004\051\u010a" +
    "\001\002\000\056\003\uff8f\011\uff8f\025\uff8f\031\uff8f\032" +
    "\uff8f\033\uff8f\034\uff8f\035\uff8f\036\uff8f\037\uff8f\040\uff8f" +
    "\041\uff8f\042\uff8f\043\uff8f\044\uff8f\045\uff8f\051\uff8f\052" +
    "\uff8f\054\uff8f\056\uff8f\057\uff8f\061\uff8f\001\002\000\020" +
    "\003\ufffb\006\ufffb\007\ufffb\012\ufffb\013\ufffb\025\ufffb\054" +
    "\ufffb\001\002\000\020\003\ufffa\006\ufffa\007\ufffa\012\ufffa" +
    "\013\ufffa\025\ufffa\054\ufffa\001\002\000\006\003\376\025" +
    "\377\001\002\000\004\051\uffdc\001\002\000\010\023\ufff6" +
    "\025\ufff6\055\ufff6\001\002\000\020\003\ufff9\006\ufff9\007" +
    "\ufff9\012\ufff9\013\ufff9\025\ufff9\054\ufff9\001\002\000\020" +
    "\003\ufffc\006\ufffc\007\ufffc\012\ufffc\013\ufffc\025\ufffc\054" +
    "\ufffc\001\002\000\006\003\330\025\016\001\002\000\004" +
    "\025\030\001\002\000\010\010\031\011\uffd2\054\uffd2\001" +
    "\002\000\006\003\325\025\016\001\002\000\006\011\035" +
    "\054\uffce\001\002\000\006\011\uffd3\054\uffd3\001\002\000" +
    "\004\054\045\001\002\000\006\003\040\025\016\001\002" +
    "\000\004\054\uffcf\001\002\000\006\052\uffc9\054\uffc9\001" +
    "\002\000\004\054\uffcc\001\002\000\006\052\043\054\uffcd" +
    "\001\002\000\006\052\uffca\054\uffca\001\002\000\004\025" +
    "\016\001\002\000\006\052\uffcb\054\uffcb\001\002\000\012" +
    "\003\uffc7\025\uffc7\054\uffc7\055\uffc7\001\002\000\012\003" +
    "\051\025\016\054\054\055\uffbc\001\002\000\004\055\323" +
    "\001\002\000\004\025\315\001\002\000\014\003\uffc5\025" +
    "\uffc5\051\uffc3\054\uffc5\055\uffc5\001\002\000\004\051\312" +
    "\001\002\000\012\003\uffc8\025\uffc8\054\uffc8\055\uffc8\001" +
    "\002\000\010\023\uffba\025\uffba\055\uffba\001\002\000\010" +
    "\023\061\025\016\055\060\001\002\000\004\025\uff9b\001" +
    "\002\000\010\023\uffbb\025\uffbb\055\uffbb\001\002\000\004" +
    "\055\uffbd\001\002\000\004\025\uff9a\001\002\000\004\025" +
    "\063\001\002\000\004\060\064\001\002\000\010\003\066" +
    "\025\016\061\uff98\001\002\000\004\025\306\001\002\000" +
    "\006\052\uff92\061\uff92\001\002\000\004\061\074\001\002" +
    "\000\006\052\uff94\061\uff94\001\002\000\006\052\072\061" +
    "\uff99\001\002\000\006\003\066\025\016\001\002\000\006" +
    "\052\uff95\061\uff95\001\002\000\010\003\uffa5\025\uffa5\054" +
    "\uffa5\001\002\000\010\003\101\025\016\054\102\001\002" +
    "\000\004\051\305\001\002\000\010\003\uffa6\025\uffa6\054" +
    "\uffa6\001\002\000\004\025\276\001\002\000\012\003\uffa3" +
    "\025\uffa3\051\uffa1\054\uffa3\001\002\000\030\003\uff96\005" +
    "\uff96\014\uff96\016\uff96\020\uff96\021\uff96\022\uff96\024\uff96" +
    "\025\uff96\054\uff96\055\uff96\001\002\000\030\003\114\005" +
    "\124\014\111\016\106\020\116\021\104\022\123\024\121" +
    "\025\105\054\117\055\115\001\002\000\004\060\271\001" +
    "\002\000\060\031\uff58\032\uff58\033\uff58\034\uff58\035\uff58" +
    "\036\uff58\037\uff58\040\uff58\041\uff58\042\uff58\043\uff58\044" +
    "\uff58\045\uff58\046\uff58\047\uff58\050\uff58\051\uff58\052\uff58" +
    "\053\uff58\056\uff58\057\uff58\060\uff58\061\uff58\001\002\000" +
    "\004\060\255\001\002\000\016\046\250\047\246\050\247" +
    "\053\160\056\157\060\245\001\002\000\032\003\uff8c\005" +
    "\uff8c\014\uff8c\015\uff8c\016\uff8c\020\uff8c\021\uff8c\022\uff8c" +
    "\024\uff8c\025\uff8c\054\uff8c\055\uff8c\001\002\000\004\060" +
    "\213\001\002\000\004\051\212\001\002\000\030\003\uff97" +
    "\005\uff97\014\uff97\016\uff97\020\uff97\021\uff97\022\uff97\024" +
    "\uff97\025\uff97\054\uff97\055\uff97\001\002\000\004\051\211" +
    "\001\002\000\010\023\uffb2\025\uffb2\055\uffb2\001\002\000" +
    "\004\060\202\001\002\000\030\003\uff96\005\uff96\014\uff96" +
    "\016\uff96\020\uff96\021\uff96\022\uff96\024\uff96\025\uff96\054" +
    "\uff96\055\uff96\001\002\000\030\003\uff8e\005\uff8e\014\uff8e" +
    "\016\uff8e\020\uff8e\021\uff8e\022\uff8e\024\uff8e\025\uff8e\054" +
    "\uff8e\055\uff8e\001\002\000\004\051\177\001\002\000\030" +
    "\003\uff8d\005\uff8d\014\uff8d\016\uff8d\020\uff8d\021\uff8d\022" +
    "\uff8d\024\uff8d\025\uff8d\054\uff8d\055\uff8d\001\002\000\022" +
    "\017\131\025\105\026\135\027\141\030\127\032\126\051" +
    "\uff77\060\133\001\002\000\004\051\125\001\002\000\032" +
    "\003\uff89\005\uff89\014\uff89\015\uff89\016\uff89\020\uff89\021" +
    "\uff89\022\uff89\024\uff89\025\uff89\054\uff89\055\uff89\001\002" +
    "\000\016\017\131\025\105\026\135\027\141\030\127\060" +
    "\133\001\002\000\044\031\uffea\032\uffea\033\uffea\034\uffea" +
    "\035\uffea\036\uffea\037\uffea\040\uffea\041\uffea\042\uffea\043" +
    "\uffea\044\uffea\045\uffea\051\uffea\052\uffea\057\uffea\061\uffea" +
    "\001\002\000\010\031\151\032\152\051\uff78\001\002\000" +
    "\004\025\016\001\002\000\052\031\uff5e\032\uff5e\033\uff5e" +
    "\034\uff5e\035\uff5e\036\uff5e\037\uff5e\040\uff5e\041\uff5e\042" +
    "\uff5e\043\uff5e\044\uff5e\045\uff5e\051\uff5e\052\uff5e\053\160" +
    "\056\157\057\uff5e\060\156\061\uff5e\001\002\000\020\017" +
    "\131\025\105\026\135\027\141\030\127\032\126\060\133" +
    "\001\002\000\044\031\uff5c\032\uff5c\033\uff5c\034\uff5c\035" +
    "\uff5c\036\uff5c\037\uff5c\040\uff5c\041\uff5c\042\uff5c\043\uff5c" +
    "\044\uff5c\045\uff5c\051\uff5c\052\uff5c\057\uff5c\061\uff5c\001" +
    "\002\000\044\031\uffec\032\uffec\033\uffec\034\uffec\035\uffec" +
    "\036\uffec\037\uffec\040\uffec\041\uffec\042\uffec\043\uffec\044" +
    "\uffec\045\uffec\051\uffec\052\uffec\057\uffec\061\uffec\001\002" +
    "\000\044\031\uff62\032\uff62\033\144\034\145\035\143\036" +
    "\uff62\037\uff62\040\uff62\041\uff62\042\uff62\043\uff62\044\uff62" +
    "\045\uff62\051\uff62\052\uff62\057\uff62\061\uff62\001\002\000" +
    "\044\031\uff5f\032\uff5f\033\uff5f\034\uff5f\035\uff5f\036\uff5f" +
    "\037\uff5f\040\uff5f\041\uff5f\042\uff5f\043\uff5f\044\uff5f\045" +
    "\uff5f\051\uff5f\052\uff5f\057\uff5f\061\uff5f\001\002\000\004" +
    "\051\142\001\002\000\044\031\uffeb\032\uffeb\033\uffeb\034" +
    "\uffeb\035\uffeb\036\uffeb\037\uffeb\040\uffeb\041\uffeb\042\uffeb" +
    "\043\uffeb\044\uffeb\045\uffeb\051\uffeb\052\uffeb\057\uffeb\061" +
    "\uffeb\001\002\000\032\003\uff87\005\uff87\014\uff87\015\uff87" +
    "\016\uff87\020\uff87\021\uff87\022\uff87\024\uff87\025\uff87\054" +
    "\uff87\055\uff87\001\002\000\016\017\uff4a\025\uff4a\026\uff4a" +
    "\027\uff4a\030\uff4a\060\uff4a\001\002\000\016\017\uff4c\025" +
    "\uff4c\026\uff4c\027\uff4c\030\uff4c\060\uff4c\001\002\000\016" +
    "\017\uff4b\025\uff4b\026\uff4b\027\uff4b\030\uff4b\060\uff4b\001" +
    "\002\000\016\017\131\025\105\026\135\027\141\030\127" +
    "\060\133\001\002\000\044\031\uff60\032\uff60\033\uff60\034" +
    "\uff60\035\uff60\036\uff60\037\uff60\040\uff60\041\uff60\042\uff60" +
    "\043\uff60\044\uff60\045\uff60\051\uff60\052\uff60\057\uff60\061" +
    "\uff60\001\002\000\010\031\151\032\152\061\154\001\002" +
    "\000\016\017\uff4e\025\uff4e\026\uff4e\027\uff4e\030\uff4e\060" +
    "\uff4e\001\002\000\016\017\uff4d\025\uff4d\026\uff4d\027\uff4d" +
    "\030\uff4d\060\uff4d\001\002\000\016\017\131\025\105\026" +
    "\135\027\141\030\127\060\133\001\002\000\044\031\uff59" +
    "\032\uff59\033\uff59\034\uff59\035\uff59\036\uff59\037\uff59\040" +
    "\uff59\041\uff59\042\uff59\043\uff59\044\uff59\045\uff59\051\uff59" +
    "\052\uff59\057\uff59\061\uff59\001\002\000\044\031\uff63\032" +
    "\uff63\033\144\034\145\035\143\036\uff63\037\uff63\040\uff63" +
    "\041\uff63\042\uff63\043\uff63\044\uff63\045\uff63\051\uff63\052" +
    "\uff63\057\uff63\061\uff63\001\002\000\022\017\131\025\105" +
    "\026\135\027\141\030\127\032\126\060\133\061\uff6c\001" +
    "\002\000\020\017\131\025\105\026\135\027\141\030\127" +
    "\032\126\060\133\001\002\000\004\025\161\001\002\000" +
    "\060\031\uff57\032\uff57\033\uff57\034\uff57\035\uff57\036\uff57" +
    "\037\uff57\040\uff57\041\uff57\042\uff57\043\uff57\044\uff57\045" +
    "\uff57\046\uff57\047\uff57\050\uff57\051\uff57\052\uff57\053\uff57" +
    "\056\uff57\057\uff57\060\uff57\061\uff57\001\002\000\010\031" +
    "\151\032\152\057\163\001\002\000\060\031\uff56\032\uff56" +
    "\033\uff56\034\uff56\035\uff56\036\uff56\037\uff56\040\uff56\041" +
    "\uff56\042\uff56\043\uff56\044\uff56\045\uff56\046\uff56\047\uff56" +
    "\050\uff56\051\uff56\052\uff56\053\uff56\056\uff56\057\uff56\060" +
    "\uff56\061\uff56\001\002\000\006\052\170\061\uff6d\001\002" +
    "\000\012\031\151\032\152\052\uff6a\061\uff6a\001\002\000" +
    "\004\061\167\001\002\000\044\031\uff5d\032\uff5d\033\uff5d" +
    "\034\uff5d\035\uff5d\036\uff5d\037\uff5d\040\uff5d\041\uff5d\042" +
    "\uff5d\043\uff5d\044\uff5d\045\uff5d\051\uff5d\052\uff5d\057\uff5d" +
    "\061\uff5d\001\002\000\020\017\131\025\105\026\135\027" +
    "\141\030\127\032\126\060\133\001\002\000\012\031\151" +
    "\032\152\052\uff6b\061\uff6b\001\002\000\046\031\uff5b\032" +
    "\uff5b\033\uff5b\034\uff5b\035\uff5b\036\uff5b\037\uff5b\040\uff5b" +
    "\041\uff5b\042\uff5b\043\uff5b\044\uff5b\045\uff5b\051\uff5b\052" +
    "\uff5b\056\173\057\uff5b\061\uff5b\001\002\000\020\017\131" +
    "\025\105\026\135\027\141\030\127\032\126\060\133\001" +
    "\002\000\010\031\151\032\152\057\175\001\002\000\044" +
    "\031\uff5a\032\uff5a\033\uff5a\034\uff5a\035\uff5a\036\uff5a\037" +
    "\uff5a\040\uff5a\041\uff5a\042\uff5a\043\uff5a\044\uff5a\045\uff5a" +
    "\051\uff5a\052\uff5a\057\uff5a\061\uff5a\001\002\000\044\031" +
    "\uff61\032\uff61\033\144\034\145\035\143\036\uff61\037\uff61" +
    "\040\uff61\041\uff61\042\uff61\043\uff61\044\uff61\045\uff61\051" +
    "\uff61\052\uff61\057\uff61\061\uff61\001\002\000\032\003\uff88" +
    "\005\uff88\014\uff88\015\uff88\016\uff88\020\uff88\021\uff88\022" +
    "\uff88\024\uff88\025\uff88\054\uff88\055\uff88\001\002\000\030" +
    "\003\114\005\124\014\111\016\106\020\116\021\104\022" +
    "\123\024\121\025\105\054\117\055\201\001\002\000\032" +
    "\003\uff84\005\uff84\014\uff84\015\uff84\016\uff84\020\uff84\021" +
    "\uff84\022\uff84\024\uff84\025\uff84\054\uff84\055\uff84\001\002" +
    "\000\020\017\131\025\105\026\135\027\141\030\127\032" +
    "\126\060\133\001\002\000\012\031\151\032\152\052\204" +
    "\061\uff75\001\002\000\004\026\210\001\002\000\004\061" +
    "\206\001\002\000\004\051\207\001\002\000\032\003\uff85" +
    "\005\uff85\014\uff85\015\uff85\016\uff85\020\uff85\021\uff85\022" +
    "\uff85\024\uff85\025\uff85\054\uff85\055\uff85\001\002\000\004" +
    "\061\uff76\001\002\000\032\003\uff73\005\uff73\014\uff73\015" +
    "\uff73\016\uff73\020\uff73\021\uff73\022\uff73\024\uff73\025\uff73" +
    "\054\uff73\055\uff73\001\002\000\032\003\uff74\005\uff74\014" +
    "\uff74\015\uff74\016\uff74\020\uff74\021\uff74\022\uff74\024\uff74" +
    "\025\uff74\054\uff74\055\uff74\001\002\000\022\003\217\017" +
    "\131\025\105\026\135\027\141\030\127\032\126\060\133" +
    "\001\002\000\032\031\151\032\152\036\240\037\236\040" +
    "\237\041\242\042\234\043\241\044\uff64\045\uff64\051\uff64" +
    "\061\uff64\001\002\000\010\045\232\051\uff80\061\uff80\001" +
    "\002\000\012\044\uff66\045\uff66\051\uff66\061\uff66\001\002" +
    "\000\006\051\uff7f\061\uff7f\001\002\000\004\061\224\001" +
    "\002\000\012\044\222\045\uff68\051\uff68\061\uff68\001\002" +
    "\000\020\017\131\025\105\026\135\027\141\030\127\032" +
    "\126\060\133\001\002\000\012\044\uff67\045\uff67\051\uff67" +
    "\061\uff67\001\002\000\026\003\114\005\124\014\111\016" +
    "\106\020\116\021\104\022\123\024\121\025\105\054\117" +
    "\001\002\000\030\003\uff83\005\uff83\014\uff83\016\uff83\020" +
    "\uff83\021\uff83\022\uff83\024\uff83\025\uff83\054\uff83\055\uff83" +
    "\001\002\000\032\003\uff8e\005\uff8e\014\uff8e\015\227\016" +
    "\uff8e\020\uff8e\021\uff8e\022\uff8e\024\uff8e\025\uff8e\054\uff8e" +
    "\055\uff8e\001\002\000\026\003\114\005\124\014\111\016" +
    "\106\020\116\021\104\022\123\024\121\025\105\054\117" +
    "\001\002\000\032\003\uff8b\005\uff8b\014\uff8b\015\uff8b\016" +
    "\uff8b\020\uff8b\021\uff8b\022\uff8b\024\uff8b\025\uff8b\054\uff8b" +
    "\055\uff8b\001\002\000\030\003\uff82\005\uff82\014\uff82\016" +
    "\uff82\020\uff82\021\uff82\022\uff82\024\uff82\025\uff82\054\uff82" +
    "\055\uff82\001\002\000\020\017\131\025\105\026\135\027" +
    "\141\030\127\032\126\060\133\001\002\000\012\044\222" +
    "\045\uff69\051\uff69\061\uff69\001\002\000\020\017\uff50\025" +
    "\uff50\026\uff50\027\uff50\030\uff50\032\uff50\060\uff50\001\002" +
    "\000\020\017\131\025\105\026\135\027\141\030\127\032" +
    "\126\060\133\001\002\000\020\017\uff53\025\uff53\026\uff53" +
    "\027\uff53\030\uff53\032\uff53\060\uff53\001\002\000\020\017" +
    "\uff52\025\uff52\026\uff52\027\uff52\030\uff52\032\uff52\060\uff52" +
    "\001\002\000\020\017\uff54\025\uff54\026\uff54\027\uff54\030" +
    "\uff54\032\uff54\060\uff54\001\002\000\020\017\uff4f\025\uff4f" +
    "\026\uff4f\027\uff4f\030\uff4f\032\uff4f\060\uff4f\001\002\000" +
    "\020\017\uff51\025\uff51\026\uff51\027\uff51\030\uff51\032\uff51" +
    "\060\uff51\001\002\000\016\031\151\032\152\044\uff65\045" +
    "\uff65\051\uff65\061\uff65\001\002\000\022\003\254\017\131" +
    "\025\105\026\135\027\141\030\127\032\126\060\133\001" +
    "\002\000\022\017\131\025\105\026\135\027\141\030\127" +
    "\032\126\060\133\061\uff6c\001\002\000\006\051\uff6f\061" +
    "\uff6f\001\002\000\006\051\uff6e\061\uff6e\001\002\000\022" +
    "\003\uff55\017\uff55\025\uff55\026\uff55\027\uff55\030\uff55\032" +
    "\uff55\060\uff55\001\002\000\004\061\252\001\002\000\006" +
    "\051\uff70\061\uff70\001\002\000\012\031\151\032\152\051" +
    "\uff72\061\uff72\001\002\000\006\051\uff71\061\uff71\001\002" +
    "\000\006\025\105\051\uff7d\001\002\000\004\051\260\001" +
    "\002\000\004\051\uff7e\001\002\000\024\003\217\017\131" +
    "\025\105\026\135\027\141\030\127\032\126\051\uff7b\060" +
    "\133\001\002\000\004\051\uff7c\001\002\000\004\051\263" +
    "\001\002\000\006\025\105\061\uff79\001\002\000\004\061" +
    "\266\001\002\000\004\061\uff7a\001\002\000\026\003\114" +
    "\005\124\014\111\016\106\020\116\021\104\022\123\024" +
    "\121\025\105\054\117\001\002\000\032\003\uff8a\005\uff8a" +
    "\014\uff8a\015\uff8a\016\uff8a\020\uff8a\021\uff8a\022\uff8a\024" +
    "\uff8a\025\uff8a\054\uff8a\055\uff8a\001\002\000\030\003\uff81" +
    "\005\uff81\014\uff81\016\uff81\020\uff81\021\uff81\022\uff81\024" +
    "\uff81\025\uff81\054\uff81\055\uff81\001\002\000\004\025\105" +
    "\001\002\000\010\053\160\056\157\061\273\001\002\000" +
    "\004\051\274\001\002\000\032\003\uff86\005\uff86\014\uff86" +
    "\015\uff86\016\uff86\020\uff86\021\uff86\022\uff86\024\uff86\025" +
    "\uff86\054\uff86\055\uff86\001\002\000\006\051\uff9f\052\uff9f" +
    "\001\002\000\010\051\uff9c\052\uff9c\056\303\001\002\000" +
    "\006\051\uffa2\052\300\001\002\000\004\025\276\001\002" +
    "\000\006\051\uffa0\052\uffa0\001\002\000\006\051\uff9e\052" +
    "\uff9e\001\002\000\004\057\304\001\002\000\006\051\uff9d" +
    "\052\uff9d\001\002\000\010\003\uffa4\025\uffa4\054\uffa4\001" +
    "\002\000\010\052\uff90\056\310\061\uff90\001\002\000\006" +
    "\052\uff93\061\uff93\001\002\000\004\057\311\001\002\000" +
    "\006\052\uff91\061\uff91\001\002\000\012\003\uffc6\025\uffc6" +
    "\054\uffc6\055\uffc6\001\002\000\006\051\uffc1\052\uffc1\001" +
    "\002\000\006\051\uffc4\052\321\001\002\000\010\051\uffbe" +
    "\052\uffbe\056\316\001\002\000\004\057\320\001\002\000" +
    "\006\051\uffc0\052\uffc0\001\002\000\006\051\uffbf\052\uffbf" +
    "\001\002\000\004\025\315\001\002\000\006\051\uffc2\052" +
    "\uffc2\001\002\000\020\003\uffd4\006\uffd4\007\uffd4\012\uffd4" +
    "\013\uffd4\025\uffd4\054\uffd4\001\002\000\006\011\uffd1\054" +
    "\uffd1\001\002\000\006\011\uffd0\054\uffd0\001\002\000\004" +
    "\051\343\001\002\000\006\003\333\025\336\001\002\000" +
    "\004\051\ufff3\001\002\000\004\046\341\001\002\000\006" +
    "\051\ufff4\052\337\001\002\000\006\051\uffee\052\uffee\001" +
    "\002\000\006\051\ufff0\052\ufff0\001\002\000\006\051\ufff1" +
    "\052\ufff1\001\002\000\004\046\uffed\001\002\000\006\003" +
    "\333\025\336\001\002\000\006\051\ufff2\052\ufff2\001\002" +
    "\000\010\026\135\027\141\030\127\001\002\000\006\051" +
    "\uffef\052\uffef\001\002\000\020\003\ufff5\006\ufff5\007\ufff5" +
    "\012\ufff5\013\ufff5\025\ufff5\054\ufff5\001\002\000\010\023" +
    "\061\025\016\055\345\001\002\000\004\002\001\001\002" +
    "\000\010\023\ufff7\025\ufff7\055\ufff7\001\002\000\004\025" +
    "\350\001\002\000\004\060\351\001\002\000\010\003\066" +
    "\025\016\061\uff98\001\002\000\004\061\353\001\002\000" +
    "\010\003\uffb0\025\uffb0\054\uffb0\001\002\000\010\003\360" +
    "\025\016\054\361\001\002\000\004\025\365\001\002\000" +
    "\004\051\364\001\002\000\010\003\uffb1\025\uffb1\054\uffb1" +
    "\001\002\000\012\003\uffae\025\uffae\051\uffac\054\uffae\001" +
    "\002\000\030\003\uff96\005\uff96\014\uff96\016\uff96\020\uff96" +
    "\021\uff96\022\uff96\024\uff96\025\uff96\054\uff96\055\uff96\001" +
    "\002\000\030\003\114\005\124\014\111\016\106\020\116" +
    "\021\104\022\123\024\121\025\105\054\117\055\363\001" +
    "\002\000\010\023\uffb3\025\uffb3\055\uffb3\001\002\000\010" +
    "\003\uffaf\025\uffaf\054\uffaf\001\002\000\010\051\uffa7\052" +
    "\uffa7\056\373\001\002\000\006\051\uffad\052\370\001\002" +
    "\000\006\051\uffaa\052\uffaa\001\002\000\004\025\365\001" +
    "\002\000\006\051\uffab\052\uffab\001\002\000\006\051\uffa9" +
    "\052\uffa9\001\002\000\004\057\374\001\002\000\006\051" +
    "\uffa8\052\uffa8\001\002\000\004\055\u0109\001\002\000\004" +
    "\055\uffb7\001\002\000\004\054\u0100\001\002\000\010\023" +
    "\uffb5\025\uffb5\055\uffb5\001\002\000\010\023\061\025\016" +
    "\055\uffb8\001\002\000\010\023\uffb6\025\uffb6\055\uffb6\001" +
    "\002\000\004\025\u0104\001\002\000\004\060\u0105\001\002" +
    "\000\010\003\066\025\016\061\uff98\001\002\000\004\061" +
    "\u0107\001\002\000\004\051\u0108\001\002\000\010\023\uffb4" +
    "\025\uffb4\055\uffb4\001\002\000\020\003\uffb9\006\uffb9\007" +
    "\uffb9\012\uffb9\013\uffb9\025\uffb9\054\uffb9\001\002\000\020" +
    "\003\uffde\006\uffde\007\uffde\012\uffde\013\uffde\025\uffde\054" +
    "\uffde\001\002\000\004\054\u0110\001\002\000\004\055\u010f" +
    "\001\002\000\004\055\uffe7\001\002\000\004\054\uffe6\001" +
    "\002\000\020\003\uffe9\006\uffe9\007\uffe9\012\uffe9\013\uffe9" +
    "\025\uffe9\054\uffe9\001\002\000\006\003\u0111\025\u0112\001" +
    "\002\000\006\052\uffe1\055\uffe1\001\002\000\010\046\u0118" +
    "\052\uffdf\055\uffdf\001\002\000\006\052\uffe3\055\uffe3\001" +
    "\002\000\006\052\u0116\055\uffe8\001\002\000\006\052\uffe4" +
    "\055\uffe4\001\002\000\006\003\u0111\025\u0112\001\002\000" +
    "\006\052\uffe5\055\uffe5\001\002\000\004\026\u011a\001\002" +
    "\000\006\052\uffe2\055\uffe2\001\002\000\006\052\uffe0\055" +
    "\uffe0\001\002\000\006\051\uffd9\052\uffd9\001\002\000\006" +
    "\051\uffda\052\uffda\001\002\000\006\051\uffd7\052\uffd7\001" +
    "\002\000\006\051\uffdd\052\u0123\001\002\000\010\051\uffd5" +
    "\052\uffd5\056\u0121\001\002\000\006\051\uffd8\052\uffd8\001" +
    "\002\000\004\057\u0122\001\002\000\006\051\uffd6\052\uffd6" +
    "\001\002\000\006\003\u011d\025\u011f\001\002\000\006\051" +
    "\uffdb\052\uffdb\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0123\000\004\003\003\001\001\000\002\001\001\000" +
    "\004\004\005\001\001\000\004\005\007\001\001\000\002" +
    "\001\001\000\022\006\012\010\024\017\023\026\016\027" +
    "\014\034\017\062\013\100\010\001\001\000\010\030\u011d" +
    "\031\u011a\032\u011b\001\001\000\006\020\u010b\021\u010a\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\063\374\001\001\000\002\001\001\000\004\007\343" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\011" +
    "\325\100\326\001\001\000\002\001\001\000\006\035\031" +
    "\036\032\001\001\000\004\100\323\001\001\000\006\037" +
    "\033\040\035\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\041\040\042\041\100\036\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\042\043\100\036\001\001\000" +
    "\002\001\001\000\004\043\045\001\001\000\012\044\052" +
    "\045\051\051\046\100\047\001\001\000\002\001\001\000" +
    "\006\046\313\047\312\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\052\054\001\001\000" +
    "\010\053\056\066\061\100\055\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\067\066\100\064" +
    "\101\070\102\067\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\100\064\102\072\001\001\000\002\001\001\000" +
    "\004\054\074\001\001\000\010\055\076\056\075\100\077" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\057" +
    "\276\060\274\001\001\000\002\001\001\000\004\077\102" +
    "\001\001\000\016\104\112\105\117\106\121\107\107\116" +
    "\111\131\106\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\132\243\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\077\177\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\016\016\133\114\137\124\127\127" +
    "\135\130\136\131\131\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\016\133\127\175\130\136\131\131\001" +
    "\001\000\002\001\001\000\004\134\152\001\001\000\004" +
    "\100\171\001\001\000\002\001\001\000\014\016\133\124" +
    "\147\127\135\130\136\131\131\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\135\145\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\016\133\130\146\131\131\001\001\000\002\001\001" +
    "\000\004\134\152\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\016\133\127\154\130\136\131\131\001\001" +
    "\000\002\001\001\000\004\135\145\001\001\000\020\016" +
    "\133\117\165\120\163\124\164\127\135\130\136\131\131" +
    "\001\001\000\014\016\133\124\161\127\135\130\136\131" +
    "\131\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\134\152\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\134\152\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\016\133\124\170\127\135\130\136\131\131\001" +
    "\001\000\004\134\152\001\001\000\002\001\001\000\014" +
    "\016\133\124\173\127\135\130\136\131\131\001\001\000" +
    "\004\134\152\001\001\000\002\001\001\000\004\135\145" +
    "\001\001\000\002\001\001\000\016\104\112\105\117\106" +
    "\121\107\107\116\111\131\106\001\001\000\002\001\001" +
    "\000\014\016\133\124\202\127\135\130\136\131\131\001" +
    "\001\000\006\115\204\134\152\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\024" +
    "\016\133\110\217\121\214\122\220\123\215\124\213\127" +
    "\135\130\136\131\131\001\001\000\006\133\234\134\152" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\016\133" +
    "\123\222\124\213\127\135\130\136\131\131\001\001\000" +
    "\002\001\001\000\016\104\224\105\225\106\121\107\107" +
    "\116\111\131\106\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\105\227\106\230\107\107\116\111\131\106" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\016" +
    "\133\122\232\123\215\124\213\127\135\130\136\131\131" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\016" +
    "\133\124\242\127\135\130\136\131\131\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\134\152\001\001\000\014" +
    "\016\133\124\252\127\135\130\136\131\131\001\001\000" +
    "\020\016\133\117\250\120\163\124\164\127\135\130\136" +
    "\131\131\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\134\152\001\001\000\002\001\001\000\010\111\255\116" +
    "\256\131\106\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\016\133\110\260\112\261\121\214\122\220\123" +
    "\215\124\213\127\135\130\136\131\131\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\113\263\116\264\131" +
    "\106\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\105\266\106\267\107\107\116\111\131\106\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\131\271\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\061\301\001\001\000\002\001\001" +
    "\000\004\060\300\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\103\306\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\050\316\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\047\321" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\012\331" +
    "\013\334\014\333\015\330\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\013" +
    "\337\014\333\015\330\001\001\000\002\001\001\000\004" +
    "\016\341\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\066\346\070\345\100\055\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\067\351\100\064\101\070\102\067\001\001\000\002" +
    "\001\001\000\004\071\353\001\001\000\010\072\356\073" +
    "\355\100\354\001\001\000\006\074\365\075\366\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\077\361\001\001\000\016\104\112\105\117\106\121" +
    "\107\107\116\111\131\106\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\076\371\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\075\370\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\064\u0100\001\001\000\010\065\u0101\066\u0102\100\055" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\067\u0105\100\064\101\070\102\067\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\022\u0113\023\u0114\024\u0112\001\001\000\002" +
    "\001\001\000\004\025\u0118\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\023\u0116\024\u0112" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\033\u011f\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\031\u011a\032\u0123\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MJParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MJParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MJParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {

	
	Symbol s = this.getScanner().next_token();
	/*if (s != null && s.value != null) 
		log.info(s.toString() + " " + s.value.toString()); */
	return s;
	

    }



	Logger log = Logger.getLogger(getClass());
	
	Boolean syntaxErrorFound = false;   
   
    // redefined error methods
     
    public void report_fatal_error(String message, Object info) throws java.lang.Exception {
      done_parsing();
      report_error(message, info);
    }
  
    public void syntax_error(Symbol cur_token) {
        //report_error("Syntax Error", cur_token);
    }
  
    public void unrecovered_syntax_error(Symbol cur_token) throws java.lang.Exception {
        report_fatal_error("Fatal Error, parsing interrupted", cur_token);
    }

    public void report_error(String message, Object info) {
    	StringBuilder msg = new StringBuilder(message); 
    	if (info != null) {
    		log.info (info.getClass());
    		log.info (info);
		}
    	if (info instanceof Symbol)
            msg.append (" on line ").append(((Symbol)info).left);
        log.error(msg.toString());
    }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$MJParser$actions {
  private final MJParser parser;

  /** Constructor */
  CUP$MJParser$actions(MJParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$MJParser$do_action(
    int                        CUP$MJParser$act_num,
    java_cup.runtime.lr_parser CUP$MJParser$parser,
    java.util.Stack            CUP$MJParser$stack,
    int                        CUP$MJParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MJParser$result;

      /* select the action based on the action number */
      switch (CUP$MJParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // Mulop ::= MOD 
            {
              Mulop RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(91/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // Mulop ::= DIV 
            {
              Mulop RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(91/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // Mulop ::= MUL 
            {
              Mulop RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(91/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // Addop ::= MINUS 
            {
              Addop RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(90/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // Addop ::= PLUS 
            {
              Addop RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(90/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // Relop ::= LESS_THAN_EQUALS 
            {
              Relop RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(89/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // Relop ::= LESS_THAN 
            {
              Relop RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(89/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // Relop ::= GREATER_THAN_EQUALS 
            {
              Relop RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(89/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // Relop ::= GREATER_THAN 
            {
              Relop RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(89/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // Relop ::= NOT_EQUALS 
            {
              Relop RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(89/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // Relop ::= EQUALS 
            {
              Relop RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(89/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // Assignop ::= ASSIGN 
            {
              Assignop RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(88/*Assignop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // Designator ::= Designator LEFT_BRACKET Expr RIGHT_BRACKET 
            {
              Designator RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(87/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // Designator ::= Designator PERIOD IDENT 
            {
              Designator RESULT = null;
		int classOrEnumFieldNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int classOrEnumFieldNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String classOrEnumFieldName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(87/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // Designator ::= IDENT 
            {
              Designator RESULT = null;
		int designNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int designNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String designName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(87/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // Factor ::= LEFT_PARENTHESIS Expr RIGHT_PARENTHESIS 
            {
              Factor RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(86/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // Factor ::= NEW Type LEFT_BRACKET Expr RIGHT_BRACKET 
            {
              Factor RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(86/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // Factor ::= NEW Type 
            {
              Factor RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(86/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // Factor ::= ConstValue 
            {
              Factor RESULT = null;
		int constValueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int constValueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ConstValue constValue = (ConstValue)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(86/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // Factor ::= Designator LEFT_PARENTHESIS ActParamsOption RIGHT_PARENTHESIS 
            {
              Factor RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(86/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // Factor ::= Designator 
            {
              Factor RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(86/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // Term ::= Factor 
            {
              Term RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(85/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // Term ::= Term Mulop Factor 
            {
              Term RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(85/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // Expr ::= MINUS Term 
            {
              Expr RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(82/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // Expr ::= Term 
            {
              Expr RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(82/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // Expr ::= Expr Addop Term 
            {
              Expr RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(82/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // CondFact ::= Expr 
            {
              CondFact RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(81/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // CondFact ::= Expr Relop Expr 
            {
              CondFact RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(81/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // CondTerm ::= CondFact 
            {
              CondTerm RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(80/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // CondTerm ::= CondTerm AND CondFact 
            {
              CondTerm RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(80/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // Condition ::= CondTerm 
            {
              Condition RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(79/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // Condition ::= Condition OR CondTerm 
            {
              Condition RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(79/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // ActPars ::= Expr 
            {
              ActPars RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(78/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // ActPars ::= ActPars COMMA Expr 
            {
              ActPars RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(78/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // ActParamsOption ::= 
            {
              ActParamsOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(77/*ActParamsOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // ActParamsOption ::= ActPars 
            {
              ActParamsOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(77/*ActParamsOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // DesignatorStatement ::= Designator DEC 
            {
              DesignatorStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(76/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // DesignatorStatement ::= Designator INC 
            {
              DesignatorStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(76/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // DesignatorStatement ::= Designator LEFT_PARENTHESIS ActParamsOption RIGHT_PARENTHESIS 
            {
              DesignatorStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(76/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // DesignatorStatement ::= Designator Assignop error 
            {
              DesignatorStatement RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in assign statement", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(76/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // DesignatorStatement ::= Designator Assignop Expr 
            {
              DesignatorStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(76/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // MatchedDesignatorStatement ::= error SEMICOLON 
            {
              MatchedDesignatorStatement RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in designator statement", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(69/*MatchedDesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // MatchedDesignatorStatement ::= DesignatorStatement SEMICOLON 
            {
              MatchedDesignatorStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(69/*MatchedDesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // PrintOption ::= 
            {
              PrintOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(75/*PrintOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // PrintOption ::= COMMA NUMBER 
            {
              PrintOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(75/*PrintOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // ReturnExprOption ::= 
            {
              ReturnExprOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(74/*ReturnExprOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // ReturnExprOption ::= Expr 
            {
              ReturnExprOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(74/*ReturnExprOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // SecondForDesignatorOption ::= 
            {
              SecondForDesignatorOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(73/*SecondForDesignatorOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // SecondForDesignatorOption ::= DesignatorStatement 
            {
              SecondForDesignatorOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(73/*SecondForDesignatorOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // ForConditionOption ::= 
            {
              ForConditionOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(72/*ForConditionOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // ForConditionOption ::= ConditionSyntaxCheck 
            {
              ForConditionOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(72/*ForConditionOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // FirstForDesignatorOption ::= 
            {
              FirstForDesignatorOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*FirstForDesignatorOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // FirstForDesignatorOption ::= DesignatorStatement 
            {
              FirstForDesignatorOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*FirstForDesignatorOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // ConditionSyntaxCheck ::= error 
            {
              ConditionSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in logical condition", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(70/*ConditionSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // ConditionSyntaxCheck ::= Condition 
            {
              ConditionSyntaxCheck RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(70/*ConditionSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // UnmatchedStatement ::= FOR LEFT_PARENTHESIS FirstForDesignatorOption SEMICOLON ForConditionOption SEMICOLON SecondForDesignatorOption RIGHT_PARENTHESIS UnmatchedStatement 
            {
              UnmatchedStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(68/*UnmatchedStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // UnmatchedStatement ::= IF LEFT_PARENTHESIS ConditionSyntaxCheck RIGHT_PARENTHESIS MatchedStatement ELSE UnmatchedStatement 
            {
              UnmatchedStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(68/*UnmatchedStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // UnmatchedStatement ::= IF LEFT_PARENTHESIS ConditionSyntaxCheck RIGHT_PARENTHESIS Statement 
            {
              UnmatchedStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(68/*UnmatchedStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // MatchedStatement ::= LEFT_BRACE StatementList RIGHT_BRACE 
            {
              MatchedStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*MatchedStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // MatchedStatement ::= PRINT LEFT_PARENTHESIS Expr PrintOption RIGHT_PARENTHESIS SEMICOLON 
            {
              MatchedStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*MatchedStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // MatchedStatement ::= READ LEFT_PARENTHESIS Designator RIGHT_PARENTHESIS SEMICOLON 
            {
              MatchedStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*MatchedStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // MatchedStatement ::= RETURN ReturnExprOption SEMICOLON 
            {
              MatchedStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*MatchedStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // MatchedStatement ::= CONTINUE SEMICOLON 
            {
              MatchedStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*MatchedStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // MatchedStatement ::= BREAK SEMICOLON 
            {
              MatchedStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*MatchedStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // MatchedStatement ::= FOR LEFT_PARENTHESIS FirstForDesignatorOption SEMICOLON ForConditionOption SEMICOLON SecondForDesignatorOption RIGHT_PARENTHESIS MatchedStatement 
            {
              MatchedStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*MatchedStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // MatchedStatement ::= IF LEFT_PARENTHESIS ConditionSyntaxCheck RIGHT_PARENTHESIS MatchedStatement ELSE MatchedStatement 
            {
              MatchedStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*MatchedStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // MatchedStatement ::= MatchedDesignatorStatement 
            {
              MatchedStatement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*MatchedStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Statement ::= UnmatchedStatement 
            {
              Statement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Statement ::= MatchedStatement 
            {
              Statement RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Type ::= IDENT 
            {
              Type RESULT = null;
		int typeNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int typeNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String typeName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(62/*Type*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // FormParArrayOption ::= 
            {
              FormParArrayOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(65/*FormParArrayOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // FormParArrayOption ::= LEFT_BRACKET RIGHT_BRACKET 
            {
              FormParArrayOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(65/*FormParArrayOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // SingleFormPar ::= error 
            {
              SingleFormPar RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in formal parameter declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(64/*SingleFormPar*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // SingleFormPar ::= Type IDENT FormParArrayOption 
            {
              SingleFormPar RESULT = null;
		int formParNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int formParNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String formParName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(64/*SingleFormPar*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // FormPars ::= SingleFormPar 
            {
              FormPars RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(63/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // FormPars ::= FormPars COMMA SingleFormPar 
            {
              FormPars RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(63/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // StatementList ::= 
            {
              StatementList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(61/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // StatementList ::= StatementList Statement 
            {
              StatementList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(61/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // FormParsOption ::= 
            {
              FormParsOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(53/*FormParsOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // FormParsOption ::= FormPars 
            {
              FormParsOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(53/*FormParsOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // ReturnType ::= VOID 
            {
              ReturnType RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(52/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // ReturnType ::= Type 
            {
              ReturnType RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(52/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // ClassMethodVarArrayOption ::= 
            {
              ClassMethodVarArrayOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(47/*ClassMethodVarArrayOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // ClassMethodVarArrayOption ::= LEFT_BRACKET RIGHT_BRACKET 
            {
              ClassMethodVarArrayOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(47/*ClassMethodVarArrayOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // SingleClassMethodVarDecl ::= IDENT ClassMethodVarArrayOption 
            {
              SingleClassMethodVarDecl RESULT = null;
		int classMethodVarNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int classMethodVarNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String classMethodVarName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(46/*SingleClassMethodVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // MultipleClassMethodVarDecl ::= SingleClassMethodVarDecl 
            {
              MultipleClassMethodVarDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(45/*MultipleClassMethodVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // MultipleClassMethodVarDecl ::= MultipleClassMethodVarDecl COMMA SingleClassMethodVarDecl 
            {
              MultipleClassMethodVarDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(45/*MultipleClassMethodVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // ClassMethodVarDeclCheck ::= error 
            {
              ClassMethodVarDeclCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in class method variable declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(44/*ClassMethodVarDeclCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // ClassMethodVarDeclCheck ::= Type MultipleClassMethodVarDecl 
            {
              ClassMethodVarDeclCheck RESULT = null;
		int classMethodVarTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int classMethodVarTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type classMethodVarType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(44/*ClassMethodVarDeclCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // ClassMethodVarDeclSyntaxCheck ::= error 
            {
              ClassMethodVarDeclSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in class method variable declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*ClassMethodVarDeclSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // ClassMethodVarDeclSyntaxCheck ::= ClassMethodVarDeclCheck SEMICOLON 
            {
              ClassMethodVarDeclSyntaxCheck RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*ClassMethodVarDeclSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // ClassMethodVarDeclList ::= 
            {
              ClassMethodVarDeclList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(42/*ClassMethodVarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // ClassMethodVarDeclList ::= ClassMethodVarDeclList ClassMethodVarDeclSyntaxCheck 
            {
              ClassMethodVarDeclList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(42/*ClassMethodVarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // MethodVarArrayOption ::= 
            {
              MethodVarArrayOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(60/*MethodVarArrayOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // MethodVarArrayOption ::= LEFT_BRACKET RIGHT_BRACKET 
            {
              MethodVarArrayOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(60/*MethodVarArrayOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // SingleMethodVarDecl ::= IDENT MethodVarArrayOption 
            {
              SingleMethodVarDecl RESULT = null;
		int methodVarNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int methodVarNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String methodVarName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(59/*SingleMethodVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // MultipleMethodVarDecl ::= SingleMethodVarDecl 
            {
              MultipleMethodVarDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(58/*MultipleMethodVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // MultipleMethodVarDecl ::= MultipleMethodVarDecl COMMA SingleMethodVarDecl 
            {
              MultipleMethodVarDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(58/*MultipleMethodVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // MethodVarDeclCheck ::= error 
            {
              MethodVarDeclCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in method variable declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(57/*MethodVarDeclCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // MethodVarDeclCheck ::= Type MultipleMethodVarDecl 
            {
              MethodVarDeclCheck RESULT = null;
		int methodVarTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int methodVarTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type methodVarType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(57/*MethodVarDeclCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // MethodVarDeclSyntaxCheck ::= error 
            {
              MethodVarDeclSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in method variable declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(56/*MethodVarDeclSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // MethodVarDeclSyntaxCheck ::= MethodVarDeclCheck SEMICOLON 
            {
              MethodVarDeclSyntaxCheck RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(56/*MethodVarDeclSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // MethodVarDeclList ::= 
            {
              MethodVarDeclList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(55/*MethodVarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // MethodVarDeclList ::= MethodVarDeclList MethodVarDeclSyntaxCheck 
            {
              MethodVarDeclList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(55/*MethodVarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ClassMethodDecl ::= ReturnType IDENT LEFT_PARENTHESIS FormParsOption RIGHT_PARENTHESIS ClassMethodVarDeclList LEFT_BRACE StatementList RIGHT_BRACE 
            {
              ClassMethodDecl RESULT = null;
		int methodNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left;
		int methodNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).right;
		String methodName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(41/*ClassMethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // MethodDecl ::= ReturnType IDENT LEFT_PARENTHESIS FormParsOption RIGHT_PARENTHESIS MethodVarDeclList LEFT_BRACE StatementList RIGHT_BRACE 
            {
              MethodDecl RESULT = null;
		int methodNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left;
		int methodNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).right;
		String methodName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(54/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // InterfaceMethodDecl ::= ReturnType IDENT LEFT_PARENTHESIS FormParsOption RIGHT_PARENTHESIS SEMICOLON 
            {
              InterfaceMethodDecl RESULT = null;
		int interfaceMethodNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int interfaceMethodNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		String interfaceMethodName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*InterfaceMethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // InterfaceMethodDeclarationList ::= 
            {
              InterfaceMethodDeclarationList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(50/*InterfaceMethodDeclarationList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // InterfaceMethodDeclarationList ::= InterfaceMethodDeclarationList InterfaceMethodDecl 
            {
              InterfaceMethodDeclarationList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(50/*InterfaceMethodDeclarationList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // InterfaceSyntaxCheck ::= error 
            {
              InterfaceSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in interface declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(49/*InterfaceSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // InterfaceSyntaxCheck ::= IDENT LEFT_BRACE InterfaceMethodDeclarationList 
            {
              InterfaceSyntaxCheck RESULT = null;
		int interfaceNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int interfaceNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		String interfaceName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(49/*InterfaceSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // InterfaceDecl ::= INTERFACE InterfaceSyntaxCheck RIGHT_BRACE 
            {
              InterfaceDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(48/*InterfaceDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // ClassMethodDeclarationsList ::= 
            {
              ClassMethodDeclarationsList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*ClassMethodDeclarationsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ClassMethodDeclarationsList ::= ClassMethodDeclarationsList ClassMethodDecl 
            {
              ClassMethodDeclarationsList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*ClassMethodDeclarationsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // ClassMethodsOption ::= 
            {
              ClassMethodsOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*ClassMethodsOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // ClassMethodsOption ::= LEFT_BRACE ClassMethodDeclarationsList RIGHT_BRACE 
            {
              ClassMethodsOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*ClassMethodsOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ClassVarArrayOption ::= 
            {
              ClassVarArrayOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*ClassVarArrayOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ClassVarArrayOption ::= LEFT_BRACKET RIGHT_BRACKET 
            {
              ClassVarArrayOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*ClassVarArrayOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // SingleClassVarDecl ::= IDENT ClassVarArrayOption 
            {
              SingleClassVarDecl RESULT = null;
		int classVarNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int classVarNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String classVarName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*SingleClassVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // MultipleClassVarDecl ::= SingleClassVarDecl 
            {
              MultipleClassVarDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*MultipleClassVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // MultipleClassVarDecl ::= MultipleClassVarDecl COMMA SingleClassVarDecl 
            {
              MultipleClassVarDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*MultipleClassVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // ClassVarDeclCheck ::= error 
            {
              ClassVarDeclCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in class field declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*ClassVarDeclCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // ClassVarDeclCheck ::= Type MultipleClassVarDecl 
            {
              ClassVarDeclCheck RESULT = null;
		int classVarTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int classVarTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type classVarType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*ClassVarDeclCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // ClassVarDeclSyntaxCheck ::= error 
            {
              ClassVarDeclSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in class field declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*ClassVarDeclSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // ClassVarDeclSyntaxCheck ::= ClassVarDeclCheck SEMICOLON 
            {
              ClassVarDeclSyntaxCheck RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*ClassVarDeclSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // ClassVarDeclList ::= 
            {
              ClassVarDeclList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*ClassVarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // ClassVarDeclList ::= ClassVarDeclList ClassVarDeclSyntaxCheck 
            {
              ClassVarDeclList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*ClassVarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // InterfaceImplemented ::= Type 
            {
              InterfaceImplemented RESULT = null;
		int interfaceTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int interfaceTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Type interfaceType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*InterfaceImplemented*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // InterfaceList ::= InterfaceImplemented 
            {
              InterfaceList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*InterfaceList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // InterfaceList ::= InterfaceList COMMA InterfaceImplemented 
            {
              InterfaceList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*InterfaceList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // ImplementsSyntaxCheck ::= IMPLEMENTS error 
            {
              ImplementsSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in class interface implementation declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*ImplementsSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // ImplementsSyntaxCheck ::= IMPLEMENTS InterfaceList 
            {
              ImplementsSyntaxCheck RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*ImplementsSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // ImplementsOption ::= 
            {
              ImplementsOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*ImplementsOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // ImplementsOption ::= ImplementsSyntaxCheck 
            {
              ImplementsOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*ImplementsOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // ExtendsSyntaxCheck ::= EXTENDS error 
            {
              ExtendsSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in class inheritance", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*ExtendsSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // ExtendsSyntaxCheck ::= EXTENDS Type 
            {
              ExtendsSyntaxCheck RESULT = null;
		int superClassTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int superClassTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Type superClassType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*ExtendsSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ExtendsOption ::= 
            {
              ExtendsOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*ExtendsOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ExtendsOption ::= ExtendsSyntaxCheck 
            {
              ExtendsOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*ExtendsOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ClassDecl ::= CLASS IDENT ExtendsOption ImplementsOption LEFT_BRACE ClassVarDeclList ClassMethodsOption RIGHT_BRACE 
            {
              ClassDecl RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ArrayOption ::= 
            {
              ArrayOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*ArrayOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // ArrayOption ::= LEFT_BRACKET RIGHT_BRACKET 
            {
              ArrayOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*ArrayOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // SingleVarDeclSyntaxCheck ::= error 
            {
              SingleVarDeclSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("4Syntax Error on line " + eleft + "; error in variable declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*SingleVarDeclSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // SingleVarDeclSyntaxCheck ::= IDENT ArrayOption 
            {
              SingleVarDeclSyntaxCheck RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*SingleVarDeclSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // SingleVarDecl ::= SingleVarDeclSyntaxCheck 
            {
              SingleVarDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*SingleVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // MultipleVarDecl ::= SingleVarDecl 
            {
              MultipleVarDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*MultipleVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // MultipleVarDecl ::= MultipleVarDecl COMMA SingleVarDecl 
            {
              MultipleVarDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*MultipleVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // VarSyntaxCheck ::= error 
            {
              VarSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("3Syntax Error on line " + eleft + "; error in variable declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*VarSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // VarSyntaxCheck ::= Type MultipleVarDecl 
            {
              VarSyntaxCheck RESULT = null;
		int varTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int varTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type varType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*VarSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // VarDecl ::= VarSyntaxCheck SEMICOLON 
            {
              VarDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // EnumValueOption ::= 
            {
              EnumValueOption RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*EnumValueOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // EnumValueOption ::= ASSIGN NUMBER 
            {
              EnumValueOption RESULT = null;
		int enumValueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int enumValueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer enumValue = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*EnumValueOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // SingleEnumElemDeclSyntaxCheck ::= error 
            {
              SingleEnumElemDeclSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("6Syntax Error on line " + eleft + "; error in enum declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*SingleEnumElemDeclSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // SingleEnumElemDeclSyntaxCheck ::= IDENT EnumValueOption 
            {
              SingleEnumElemDeclSyntaxCheck RESULT = null;
		int enumElemNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int enumElemNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String enumElemName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*SingleEnumElemDeclSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // SingleEnumElemDecl ::= SingleEnumElemDeclSyntaxCheck 
            {
              SingleEnumElemDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*SingleEnumElemDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // MultipleEnumElemDecl ::= SingleEnumElemDecl 
            {
              MultipleEnumElemDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*MultipleEnumElemDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // MultipleEnumElemDecl ::= MultipleEnumElemDecl COMMA SingleEnumElemDecl 
            {
              MultipleEnumElemDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*MultipleEnumElemDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // EnumName ::= IDENT 
            {
              EnumName RESULT = null;
		int enumNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int enumNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String enumName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*EnumName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // EnumSyntaxCheck ::= error 
            {
              EnumSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("5Syntax Error on line " + eleft + "; error in enum declaration", null);  parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*EnumSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // EnumSyntaxCheck ::= EnumName LEFT_BRACE MultipleEnumElemDecl 
            {
              EnumSyntaxCheck RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*EnumSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // EnumDecl ::= ENUM EnumSyntaxCheck RIGHT_BRACE 
            {
              EnumDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*EnumDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ConstValue ::= BOOL 
            {
              ConstValue RESULT = null;
		int boolValueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int boolValueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Boolean boolValue = (Boolean)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*ConstValue*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // ConstValue ::= CHAR 
            {
              ConstValue RESULT = null;
		int charValueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int charValueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Character charValue = (Character)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*ConstValue*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // ConstValue ::= NUMBER 
            {
              ConstValue RESULT = null;
		int numberValueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int numberValueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer numberValue = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*ConstValue*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ConstName ::= IDENT 
            {
              ConstName RESULT = null;
		int constNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int constNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String constName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*ConstName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SingleConstDeclSyntaxCheck ::= error 
            {
              SingleConstDeclSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("2Syntax Error on line " + eleft + "; error in constant declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*SingleConstDeclSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // SingleConstDeclSyntaxCheck ::= ConstName ASSIGN ConstValue 
            {
              SingleConstDeclSyntaxCheck RESULT = null;
		int constNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int constNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ConstName constName = (ConstName)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int constValueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int constValueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ConstValue constValue = (ConstValue)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*SingleConstDeclSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // SingleConstDecl ::= SingleConstDeclSyntaxCheck 
            {
              SingleConstDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*SingleConstDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // MultipleConstDecl ::= SingleConstDecl 
            {
              MultipleConstDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*MultipleConstDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // MultipleConstDecl ::= MultipleConstDecl COMMA SingleConstDecl 
            {
              MultipleConstDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*MultipleConstDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ConstSyntaxCheck ::= error 
            {
              ConstSyntaxCheck RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 parser.report_error("1Syntax Error on line " + eleft + "; error in constant declaration", null); parser.syntaxErrorFound = true; 
              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*ConstSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ConstSyntaxCheck ::= Type MultipleConstDecl 
            {
              ConstSyntaxCheck RESULT = null;
		int constTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int constTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type constType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*ConstSyntaxCheck*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ConstDecl ::= CONST ConstSyntaxCheck SEMICOLON 
            {
              ConstDecl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // MethodDeclarationsList ::= 
            {
              MethodDeclarationsList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*MethodDeclarationsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // MethodDeclarationsList ::= MethodDeclarationsList MethodDecl 
            {
              MethodDeclarationsList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*MethodDeclarationsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Decl ::= InterfaceDecl 
            {
              Decl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Decl ::= EnumDecl 
            {
              Decl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Decl ::= ClassDecl 
            {
              Decl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Decl ::= VarDecl 
            {
              Decl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Decl ::= ConstDecl 
            {
              Decl RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // DeclarationsList ::= 
            {
              DeclarationsList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*DeclarationsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // DeclarationsList ::= DeclarationsList Decl 
            {
              DeclarationsList RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*DeclarationsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ProgramName ::= IDENT 
            {
              ProgramName RESULT = null;
		int programNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int programNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String programName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*ProgramName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Program EOF 
            {
              SyntaxNode RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Program start_val = (Program)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		RESULT = start_val;
              CUP$MJParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$MJParser$parser.done_parsing();
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Program ::= PROGRAM ProgramName DeclarationsList LEFT_BRACE MethodDeclarationsList RIGHT_BRACE 
            {
              Program RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

